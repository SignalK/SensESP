; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; IMPORTANT: This file defines the environment for building SensESP
; itself when doing feature development. It must NOT be used as a template
; for projects merely based on SensESP. For that purpose, use the file
; examples/platformio.ini instead.

[env:esp32dev]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
board = esp32dev
framework = arduino
lib_ldf_mode = deep

;board_build.embed_txtfiles =
;    managed_components/espressif__esp_insights/server_certs/https_server.crt
;    managed_components/espressif__esp_rainmaker/server_certs/rmaker_mqtt_server.crt
;    managed_components/espressif__esp_rainmaker/server_certs/rmaker_claim_service_server.crt
;    managed_components/espressif__esp_rainmaker/server_certs/rmaker_ota_server.crt

; Serial upload and monitor settings

;monitor_port = /dev/tty.usbserial-310
;upload_port = /dev/tty.usbserial-310
;upload_speed = 460800
; For maximum upload speed, uncomment the following line and comment out the
; line above.
upload_speed = 2000000
monitor_speed = 115200

lib_deps =
  mairas/ReactESP @ ^3.2.0
  bblanchon/ArduinoJson @ ^7.0.0
  pfeerick/elapsedMillis @ ^1.0.6
  bxparks/AceButton @ ^1.10.1
  fastled/FastLED @ ^3.9.4
  esp_websocket_client=https://components.espressif.com/api/downloads/?object_type=component&object_id=dbc87006-9a4b-45e6-a6ab-b286174cb413


build_unflags = -Werror=reorder
board_build.partitions = min_spiffs.csv
monitor_filters = esp32_exception_decoder
extra_scripts =
  pre:extra_script.py
check_skip_packages = true
build_flags =
  -D LED_BUILTIN=2
  ; Max (and default) debugging level in Arduino ESP32 Core
  -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
  ; Arduino Core bug workaround: define the log tag for the Arduino
  ; logging macros.
  ;-D TAG='"Arduino"'
  ; Use the ESP-IDF logging library - required by SensESP.
  -D USE_ESP_IDF_LOG

; Uncomment the following to use the OTA interface for flashing.
; "mydevice" must correspond to the device hostname.
; "mypassword" must correspond to the device OTA password.
;upload_protocol = espota
;upload_port = mydevice.local
;upload_port = 192.168.4.1
;upload_flags =
;   --auth=mypassword
;   --auth="password"

; JTAG debugging settings

;upload_protocol = esp-prog
;debug_tool = esp-prog
;debug_init_break = tbreak setup

test_build_src = true
check_tool = clangtidy
check_flags =
  clangtidy: --fix --format-style=file --config-file=.clang-tidy
